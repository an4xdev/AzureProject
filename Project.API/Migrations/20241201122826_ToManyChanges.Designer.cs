// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.API.Database;

#nullable disable

namespace Project.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241201122826_ToManyChanges")]
    partial class ToManyChanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project.API.Models.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a2f1a7c8-3f1b-4db9-b251-ffbb924fcd47"),
                            PostId = new Guid("d2a7e8f6-e26f-489a-832c-4c93b7be62f5"),
                            Time = new DateTime(2024, 10, 1, 12, 0, 12, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d479"),
                            Value = "Great!"
                        },
                        new
                        {
                            Id = new Guid("c3d5e77e-d60a-4219-a5b7-869f6d2e03b2"),
                            PostId = new Guid("d2a7e8f6-e26f-489a-832c-4c93b7be62f5"),
                            Time = new DateTime(2024, 11, 15, 8, 30, 45, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("f18b62db-69b3-45b6-9d93-23489db44c4f"),
                            Value = "LOL!"
                        },
                        new
                        {
                            Id = new Guid("e5a2a814-98a0-4d9d-9c2e-04f32a58f2bd"),
                            PostId = new Guid("d511a30e-e1e5-402f-8c5e-d1e0b5d4f34a"),
                            Time = new DateTime(2024, 9, 10, 17, 15, 23, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("49dc72ab-50ce-49b4-91f6-9c69d5c6e8bb"),
                            Value = "KEKW!"
                        },
                        new
                        {
                            Id = new Guid("f7bc2d1c-0f5c-4b25-a5e8-08c9df3f6f3b"),
                            PostId = new Guid("9f8fdbcc-3765-4623-91e5-fb4ccf2d78a8"),
                            Time = new DateTime(2024, 11, 27, 23, 59, 59, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("c9da05f8-892b-41e5-99cc-7a89b6edc789"),
                            Value = "Slay!"
                        },
                        new
                        {
                            Id = new Guid("b1e9873d-5036-4e21-9ea2-0f74b2bcb3db"),
                            PostId = new Guid("9f8fdbcc-3765-4623-91e5-fb4ccf2d78a8"),
                            Time = new DateTime(2024, 12, 1, 14, 34, 44, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("f18b62db-69b3-45b6-9d93-23489db44c4f"),
                            Value = "Skibidi!"
                        });
                });

            modelBuilder.Entity("Project.API.Models.Emote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Emoji")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emotes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6fa459ea-ee8a-3ca4-894e-db77e160355e"),
                            Emoji = "❤️"
                        },
                        new
                        {
                            Id = new Guid("d9428888-122b-11e1-b85c-61cd3cbb3210"),
                            Emoji = "🤣"
                        },
                        new
                        {
                            Id = new Guid("e6f8e7d7-3323-4c93-8b85-083fb172a2a0"),
                            Emoji = "😮"
                        },
                        new
                        {
                            Id = new Guid("b85fc1ea-a338-11d8-8f73-0002440126c0"),
                            Emoji = "😭"
                        },
                        new
                        {
                            Id = new Guid("2f48ff5f-2b47-48d5-a939-dc57a5bcabfb"),
                            Emoji = "😡"
                        });
                });

            modelBuilder.Entity("Project.API.Models.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2a7e8f6-e26f-489a-832c-4c93b7be62f5"),
                            Likes = 50,
                            PhotoPath = "https://anax.blob.core.windows.net/test/24d738d3-3da9-4e7d-a992-0d5dbb916415.png",
                            UserId = new Guid("49dc72ab-50ce-49b4-91f6-9c69d5c6e8bb")
                        },
                        new
                        {
                            Id = new Guid("d511a30e-e1e5-402f-8c5e-d1e0b5d4f34a"),
                            Description = "Some description",
                            Likes = 20,
                            PhotoPath = "https://anax.blob.core.windows.net/test/24d738d3-3da9-4e7d-a992-0d5dbb916415.png",
                            UserId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d479")
                        },
                        new
                        {
                            Id = new Guid("9f8fdbcc-3765-4623-91e5-fb4ccf2d78a8"),
                            Description = "Some other description",
                            Likes = 25,
                            PhotoPath = "https://anax.blob.core.windows.net/test/24d738d3-3da9-4e7d-a992-0d5dbb916415.png",
                            UserId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d479")
                        },
                        new
                        {
                            Id = new Guid("3e052e9d-1c18-40c6-8913-94a067b6b5e3"),
                            Description = "Skibidi",
                            Likes = 30,
                            PhotoPath = "https://anax.blob.core.windows.net/test/24d738d3-3da9-4e7d-a992-0d5dbb916415.png",
                            UserId = new Guid("f18b62db-69b3-45b6-9d93-23489db44c4f")
                        },
                        new
                        {
                            Id = new Guid("0f37c9f4-b3c3-4da4-a7f3-08d6bcd27dcf"),
                            Likes = 40,
                            PhotoPath = "https://anax.blob.core.windows.net/test/24d738d3-3da9-4e7d-a992-0d5dbb916415.png",
                            UserId = new Guid("a70f1ae1-285d-41e3-a93a-1b0dcf0bc44d")
                        });
                });

            modelBuilder.Entity("Project.API.Models.PostEmote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmoteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmoteId");

                    b.HasIndex("PostId");

                    b.ToTable("PostEmotes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bfb5e5ac-1a6d-4c69-9094-1cd627e38a0a"),
                            EmoteId = new Guid("6fa459ea-ee8a-3ca4-894e-db77e160355e"),
                            PostId = new Guid("d2a7e8f6-e26f-489a-832c-4c93b7be62f5"),
                            UserId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d479")
                        },
                        new
                        {
                            Id = new Guid("e31d39a7-f3d1-4b75-8dc1-abc62c3bb9d5"),
                            EmoteId = new Guid("e6f8e7d7-3323-4c93-8b85-083fb172a2a0"),
                            PostId = new Guid("0f37c9f4-b3c3-4da4-a7f3-08d6bcd27dcf"),
                            UserId = new Guid("c9da05f8-892b-41e5-99cc-7a89b6edc789")
                        },
                        new
                        {
                            Id = new Guid("d02a51f5-4ee1-4a9b-a3b5-d76b3e3a7716"),
                            EmoteId = new Guid("2f48ff5f-2b47-48d5-a939-dc57a5bcabfb"),
                            PostId = new Guid("d2a7e8f6-e26f-489a-832c-4c93b7be62f5"),
                            UserId = new Guid("49dc72ab-50ce-49b4-91f6-9c69d5c6e8bb")
                        },
                        new
                        {
                            Id = new Guid("c7e8fd21-318c-4e94-bd1d-f6e3743c9a6b"),
                            EmoteId = new Guid("d9428888-122b-11e1-b85c-61cd3cbb3210"),
                            PostId = new Guid("9f8fdbcc-3765-4623-91e5-fb4ccf2d78a8"),
                            UserId = new Guid("a70f1ae1-285d-41e3-a93a-1b0dcf0bc44d")
                        },
                        new
                        {
                            Id = new Guid("94c4b210-5f9f-468c-95a6-c11d37f82a93"),
                            EmoteId = new Guid("b85fc1ea-a338-11d8-8f73-0002440126c0"),
                            PostId = new Guid("d511a30e-e1e5-402f-8c5e-d1e0b5d4f34a"),
                            UserId = new Guid("f18b62db-69b3-45b6-9d93-23489db44c4f")
                        },
                        new
                        {
                            Id = new Guid("11e2bffa-7d44-40be-a0a6-bcc32b618289"),
                            EmoteId = new Guid("6fa459ea-ee8a-3ca4-894e-db77e160355e"),
                            PostId = new Guid("3e052e9d-1c18-40c6-8913-94a067b6b5e3"),
                            UserId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d479")
                        },
                        new
                        {
                            Id = new Guid("f0537b5e-420f-4577-b348-c44dc543fc09"),
                            EmoteId = new Guid("e6f8e7d7-3323-4c93-8b85-083fb172a2a0"),
                            PostId = new Guid("9f8fdbcc-3765-4623-91e5-fb4ccf2d78a8"),
                            UserId = new Guid("f18b62db-69b3-45b6-9d93-23489db44c4f")
                        },
                        new
                        {
                            Id = new Guid("aa2de3f9-d5f0-41eb-95df-f3b08b446fae"),
                            EmoteId = new Guid("2f48ff5f-2b47-48d5-a939-dc57a5bcabfb"),
                            PostId = new Guid("d511a30e-e1e5-402f-8c5e-d1e0b5d4f34a"),
                            UserId = new Guid("c9da05f8-892b-41e5-99cc-7a89b6edc789")
                        },
                        new
                        {
                            Id = new Guid("843d9b36-c24d-43d9-b98f-9cbfcbdc1ae6"),
                            EmoteId = new Guid("d9428888-122b-11e1-b85c-61cd3cbb3210"),
                            PostId = new Guid("d2a7e8f6-e26f-489a-832c-4c93b7be62f5"),
                            UserId = new Guid("49dc72ab-50ce-49b4-91f6-9c69d5c6e8bb")
                        },
                        new
                        {
                            Id = new Guid("3b99b4cf-dfb7-4e6c-bb68-88dc96c2dca2"),
                            EmoteId = new Guid("b85fc1ea-a338-11d8-8f73-0002440126c0"),
                            PostId = new Guid("0f37c9f4-b3c3-4da4-a7f3-08d6bcd27dcf"),
                            UserId = new Guid("a70f1ae1-285d-41e3-a93a-1b0dcf0bc44d")
                        });
                });

            modelBuilder.Entity("Project.API.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("49dc72ab-50ce-49b4-91f6-9c69d5c6e8bb"),
                            Email = "aa@example.com",
                            Name = "aa",
                            Password = "lhtt0+3jy47LqsvWjeBAzXjrLtWIkTDM60xJJo6k1QY="
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d479"),
                            Email = "bb@example.com",
                            Name = "bb",
                            Password = "O2TblctVx2M5HHBxCEia4YtBEteDMA3jjgM7TJjD3q8="
                        },
                        new
                        {
                            Id = new Guid("a70f1ae1-285d-41e3-a93a-1b0dcf0bc44d"),
                            Email = "cc@example.com",
                            Name = "cc",
                            Password = "NVsbv8lnJc3Oj0onCP2jEKgObRMxWuxOXu0qdf6AMs4="
                        },
                        new
                        {
                            Id = new Guid("c9da05f8-892b-41e5-99cc-7a89b6edc789"),
                            Email = "dd@example.com",
                            Name = "dd",
                            Password = "m37MbuuDq/mt4Q/jiGXfRJm+NWjcxQeuLsO0SYnLAJM="
                        },
                        new
                        {
                            Id = new Guid("f18b62db-69b3-45b6-9d93-23489db44c4f"),
                            Email = "ee@example.com",
                            Name = "ee",
                            Password = "J6hHEuSyLEFfxUTVXN7oIyeoKfltAzKUV/duv5r03Ko="
                        });
                });

            modelBuilder.Entity("Project.API.Models.Comment", b =>
                {
                    b.HasOne("Project.API.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Project.API.Models.Post", b =>
                {
                    b.HasOne("Project.API.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project.API.Models.PostEmote", b =>
                {
                    b.HasOne("Project.API.Models.Emote", "Emote")
                        .WithMany()
                        .HasForeignKey("EmoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.API.Models.Post", "Post")
                        .WithMany("PostEmotes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emote");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Project.API.Models.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("PostEmotes");
                });

            modelBuilder.Entity("Project.API.Models.User", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
