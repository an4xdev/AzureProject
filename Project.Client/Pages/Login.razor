@page "/Login"

@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage
@inject EventAggregator EventAggregator
@inject ISnackbar Snackbar

<PageTitle>Login to our service</PageTitle>

<MudContainer>
    <MudTextField @bind-Value="_request.Email" Label="Email" T="string" InputType="InputType.Email" Class="m-2"></MudTextField>
    <MudTextField @bind-Value="_request.Password" Label="Password" T="string"
                  InputType="InputType.Password" Class="m-2"></MudTextField>
    <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="LoginClicked" Class="m-2">Login</MudButton>
    <div>
        <MudLink Href="/Register" Color="Color.Secondary" Underline="Underline.Hover" Class="m-2">Don't have account? Register</MudLink>
    </div>
</MudContainer>

@code {
    private readonly LoginRequest _request = new();

    private async Task LoginClicked()
    {
        var response = await Http.PostAsJsonAsync("/user/login", _request);
        var content = await response.Content.ReadFromJsonAsync<LoginResponse>();

        if (!content!.IsSuccessful)
        {
            Snackbar.Add(content.Message, Severity.Error);
            return;
        }

        Snackbar.Add("Successfully logged.", Severity.Success);

        var currentUser = new CurrentUser
        {
            UserId = content.UserId,
            Email = _request.Email,
            UserName = content.UserName
        };

        await LocalStorage.SetItemAsync("user", currentUser);

        EventAggregator.Publish("logged");

        NavigationManager.NavigateTo("/");
    }

}